name: Test run

on:
  push:
    tags-ignore:
      - '*'
    branches:
      - '**'

env:
  REGISTRY: ghcr.io
  POSTGRES_USER: test-bruker
  POSTGRES_PASSWORD: 1234567
  POSTGRES_DB: test-db

jobs:
  build: 
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - 
        name: Log in to GHCR
        uses: docker/login-action@v1.12.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run with setup-python 3.9
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.9
  #     - name: Install  requirements
  #       run: |
  #         pip install -r src/requirements.txt
  #     - name: Run tests
  #       run: coverage run src/app_test.py
  #     - name: Test report
  #       run: coverage report
  
  deploy: 
    needs: build
    runs-on: self-hosted
    steps: 
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
      - 
        name: Uplode release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}

      # - name: Add ssh
      #   run: |
      #     apk add --no-cache openssh-client
      #     eval $(ssh-agent -s)
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-add -
      #     mkdir -p ~/.ssh
      #     chmod 700 ~/.ssh
      #     echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      # - name: Publich
      #   run: |
      #     ssh charlottct@10.225.149.192 "echo POSTGRES_USER=\"${{ env.POSTGRES_USER }}\" > .env"
      #     ssh charlottct@10.225.149.192 "echo POSTGRES_PASSWORD=\"${{ env.POSTGRES_PASSWORD }}\" >> .env"
      #     ssh charlottct@10.225.149.192 "echo POSTGRES_DB=\"${{ env.POSTGRES_DB }}\" >> .env"
      #     scp docker-compose.yml charlottct@10.225.149.192:~/docker-compose.yml
      #     ssh charlottct@10.225.149.192 "docker login -u \"${{ secrets.DOCKERHUB_USERNAME }}\" -p \"${{ secrets.GITHUB_TOKEN }}\" ${{ env.REGISTRY }} && docker-compose pull && docker-compose up -d"

